{"version":3,"sources":["components/listall.component.js","components/addtaskmodal.component.js","components/edittaskmodal.component.js","App.js","serviceWorker.js","index.js"],"names":["resT","columnStyle","border","borderRadius","width","height","padding","margin","display","flexDirection","buttonStyle","backgroundColor","color","textAlign","textDecoration","fontSize","marginBottom","cursor","buttonStyleRed","columnboxStyle","minHeight","statusStyle","textTransform","btn","btnbox","justifyContent","taskStyle","wordWrap","ListALL","props","window","func","deleteTask","bind","state","tasks","columns","map","Axios","all","get","then","spread","tasksRes","columnsRes","setState","data","id","delete","response","console","log","this","filter","el","_id","countArr","count","forEach","col","task","status","push","index","column","limit","key","style","renderALLv2","Component","Task","name","description","className","paddingLeft","user","to","onClick","Column","href","AddTaskModal","onChangeName","onChangeDescription","onChangeStatus","onChangeUser","onSubmit","handleShow","handleClose","users","show","axios","res","length","us","e","target","value","preventDefault","post","alert","location","isOpen","type","required","onChange","ref","selected","disabled","hidden","usr","EditTaskModal","match","params","catch","error","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.47e241d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nvar resC;\r\nvar resT;\r\nvar fullMap;\r\n\r\nconst columnStyle = {\r\n  border: \"2px solid orange\",\r\n  borderRadius: \"3px\",\r\n  width: \"300px\",\r\n  height: \"100%\",\r\n  padding: \"8px\",\r\n  margin: \"5px 20px 15px 0px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\"\r\n};\r\nconst buttonStyle = {\r\n  backgroundColor: \"#4CAF50\",\r\n  border: \"none\",\r\n  borderRadius: \"5px\",\r\n  color: \"white\",\r\n  padding: \"15px 26px\",\r\n  textAlign: \"center\",\r\n  textDecoration: \"none\",\r\n  display: \"inline-block\",\r\n  fontSize: \"18px\",\r\n  marginBottom: \"18px\",\r\n  cursor: \"pointer\"\r\n};\r\nconst buttonStyleRed = {\r\n  backgroundColor: \"red\",\r\n  border: \"none\",\r\n  borderRadius: \"5px\",\r\n  color: \"white\",\r\n  padding: \"15px 26px\",\r\n  textAlign: \"center\",\r\n  textDecoration: \"none\",\r\n  display: \"inline-block\",\r\n  fontSize: \"18px\",\r\n  marginBottom: \"18px\",\r\n};\r\nconst columnboxStyle = {\r\n  backgroundColor: \"#282c34\",\r\n  minHeight: \"100vh\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\"\r\n};\r\nconst statusStyle = {\r\n  textTransform: \"uppercase\"\r\n};\r\nconst btn = {\r\n  backgroundColor: \"inherit\",\r\n  border: \"none\",\r\n  color: \"white\",\r\n  margin: \"4px 16px 12px 16px\",\r\n  fontSize: \"16px\",\r\n  cursor: \"pointer\"\r\n};\r\nconst btnbox = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\"\r\n};\r\nconst taskStyle = {\r\n  backgroundColor: \"rgba(0,0,0,0.33)\",\r\n  border: \"1px solid darkorange\",\r\n  borderRadius: \"3px\",\r\n  width: \"90%\",\r\n  margin: \"5px 0px 8px 14px\",\r\n  padding: \"5px 5px 0px 5px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  wordWrap: 'break-word'\r\n};\r\n\r\n\r\n\r\n// TASKS --------------\r\nexport default class ListALL extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    window.func = this;\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.state = {\r\n      tasks: [],\r\n      columns: [],\r\n      map: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.all([\r\n      Axios.get(\"/tasks/\"),\r\n      Axios.get(\"/columns/\")\r\n    ]).then(\r\n      Axios.spread((tasksRes, columnsRes) => {\r\n        this.setState({ tasks: tasksRes.data });\r\n        this.setState({ columns: columnsRes.data });\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteTask(id) {\r\n    Axios.delete(\"/tasks/\" + id).then(response => {\r\n      console.log(response.data);\r\n    });\r\n\r\n    this.setState({\r\n      tasks: this.state.tasks.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  \r\n\r\n  renderALLv2() {\r\n    let countArr = [];\r\n    let count = 0;\r\n    resT = this.state.tasks;\r\n    this.state.columns.forEach(col => {\r\n      count = 0;\r\n      resT.forEach(task => {\r\n      col.status === task.status ? count++ : console.log(count)\r\n      })\r\n      countArr.push(count);\r\n    }) \r\n    return this.state.columns.map((col, index) => {\r\n      return <Column column={col} limit={col.limit - countArr[index]} key={col._id} />;\r\n    });\r\n  }\r\n  render() {\r\n    return <div style={columnboxStyle}>{this.renderALLv2()}</div>;\r\n  }\r\n}\r\n\r\nfunction renderTaskIfMatch(tsk, col) {\r\n    return tsk.map(el => {\r\n      return el.status === col.column.status ? (\r\n        <Task task={el} key={el._id} />\r\n      ) : (\r\n        console.log(\"task not equal column\")\r\n      );\r\n    });\r\n  }\r\n  \r\n  const Task = props => (\r\n    <div style={taskStyle}>\r\n      <h4>{props.task.name}</h4>\r\n      <h5 style={{fontSize: '0.8rem'}}>{props.task.description}</h5>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\"><h6>STATUS: </h6></div> \r\n        <div className=\"col-sm\" style={{textTransform: 'uppercase', paddingLeft: '0px'}}><h6>{props.task.status}</h6></div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\"><h6>USER: </h6></div> \r\n        <div className=\"col-sm\" style={{paddingLeft: '0px'}}><h6>{props.task.user}</h6></div>\r\n      </div>\r\n      <div style={btnbox}>\r\n        {/* Link does not refresh browser */}\r\n        <Link to={\"/tasks/update/\"+props.task._id} style={btn}>\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </Link>\r\n        <Link\r\n          to=\"/\"\r\n          onClick={() => {\r\n            window.func.deleteTask(props.task._id)\r\n          }}\r\n          style={btn}\r\n        >\r\n          <i className=\"fa fa-trash\"></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n  // TASK\r\n  \r\n  \r\n  const Column = props => (\r\n    <div style={columnStyle}>\r\n      <div>\r\n        {props.limit > 0 ? <h6>{props.limit}</h6> : <h6 style={{color: 'red'}}>TASK LIMIT EXCEEDED!</h6>}\r\n      </div>\r\n      <div>\r\n        <h2 style={statusStyle}>{props.column.status}</h2>\r\n        {props.limit > 0 ? \r\n        <a href=\"/tasks/add\" style={buttonStyle}>Add task</a> :\r\n        <p style={buttonStyleRed}>LIMIT EXCEEDED!</p>\r\n        }\r\n      </div>\r\n      {renderTaskIfMatch(resT, props)}\r\n    </div>\r\n  );","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal'\r\n\r\n\r\nexport default class AddTaskModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeUser = this.onChangeUser.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      name: '',\r\n      description: '',\r\n      status:'',\r\n      user:'',\r\n      columns: [],\r\n      users: [],\r\n      show: true,\r\n    }\r\n  }\r\ncomponentDidMount(){\r\n  axios.get('/users/').then(res => {\r\n    if (res.data.length > 0) {\r\n      this.setState({\r\n        users: res.data.map(us => us.name),\r\n        user: res.data[0].name,\r\n      })\r\n    }\r\n  })\r\n  axios.get('/columns/').then(res => {\r\n    if (res.data.length > 0) {\r\n      this.setState({\r\n        columns: res.data.map(col => col.status),\r\n        status: res.data[0].status,\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n//changing values\r\n  onChangeName(e){\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n  onChangeDescription(e){\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n  onChangeStatus(e){\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  }\r\n  onChangeUser(e){\r\n    this.setState({\r\n      user: e.target.value\r\n    });\r\n  }\r\n  //Modal show/hide\r\n  handleShow() {\r\n    this.setState({show: true});\r\n  }\r\n  handleClose() {\r\n    this.setState({show: false});\r\n  }\r\n\r\n  //Send values\r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    const task = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      status: this.state.status,\r\n      user: this.state.user,\r\n    }\r\n\r\n    console.log(this.state.users[0]);\r\n    console.log(task);\r\n    axios.post('/tasks/add/', task)\r\n    .then(res => console.log(res.data));\r\n    alert(\"Task added\");\r\n    window.location = '/';\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Modal isOpen={this.state.show}>\r\n    <div>\r\n      <h3>Create new task</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Task name</label>\r\n              <input type=\"text\" className=\"form-control\" required value={this.state.name} onChange={this.onChangeName} />\r\n            </div>\r\n            <div>\r\n              <label>Description</label>\r\n              <input type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onChangeDescription} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>User</label>\r\n              <select ref=\"userInput\" className=\"form-control\" value={this.state.user} onChange={this.onChangeUser}>\r\n              <option value={this.state.users[0]} selected disabled hidden>{this.state.users[0]}</option>\r\n                {\r\n                  this.state.users.map((usr)=>{\r\n                    return <option key={usr} value={usr}>{usr}</option>\r\n                  })\r\n                }\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Status</label>\r\n              <select ref=\"userInput2\" className=\"form-control\" required value={this.state.status} onChange={this.onChangeStatus}>\r\n              <option value={this.state.columns[0]} selected disabled hidden>{this.state.columns[0]}</option>\r\n                {\r\n                  this.state.columns.map((col)=>{\r\n                    return <option key={col} value={col}>{col}</option>\r\n                  })\r\n                }\r\n              </select>\r\n            </div >\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"create task\" className=\"btn btn-primary\"/>\r\n            <input type=\"button\" onClick={this.handleClose} value=\"close\" className=\"btn btn-danger\"/>\r\n          </div>\r\n      </form>\r\n    </div>\r\n    </Modal>    \r\n    )\r\n  }\r\n}     ","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal'\r\n\r\n\r\nexport default class EditTaskModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeUser = this.onChangeUser.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      name: '',\r\n      description: '',\r\n      status:'',\r\n      user:'',\r\n      columns: [],\r\n      users: [],\r\n    }\r\n  }\r\ncomponentDidMount(){\r\n  axios.get('/tasks/'+this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          description: res.data.description,\r\n          status: res.data.status,\r\n          user: res.data.user,\r\n        })   \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  axios.get('/users/').then(res => {\r\n    if (res.data.length > 0) {\r\n      this.setState({\r\n        users: res.data.map(us => us.name),\r\n      })\r\n    }\r\n  })\r\n  axios.get('/columns/').then(res => {\r\n    if (res.data.length > 0) {\r\n      this.setState({\r\n        columns: res.data.map(col => col.status),\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n//changing values\r\n  onChangeName(e){\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n  onChangeDescription(e){\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n  onChangeStatus(e){\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  }\r\n  onChangeUser(e){\r\n    this.setState({\r\n      user: e.target.value\r\n    });\r\n  }\r\n  //Send values\r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const task = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      status: this.state.status,\r\n      user: this.state.user,\r\n    }\r\n\r\n    console.log(this.state.users[0]);\r\n    console.log(task);\r\n    axios.post('/tasks/update/'+ this.props.match.params.id, task)\r\n    .then(res => console.log(res.data));\r\n    alert(\"Task edited\");\r\n    window.location = '/';\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Modal isOpen={true}>\r\n    <div>\r\n      <h3>Edit task</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Task name</label>\r\n              <input type=\"text\" className=\"form-control\" required value={this.state.name} onChange={this.onChangeName} />\r\n            </div>\r\n            <div>\r\n              <label>Description</label>\r\n              <input type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onChangeDescription} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>User</label>\r\n              <select ref=\"userInput\" className=\"form-control\" value={this.state.user} onChange={this.onChangeUser}>\r\n              <option value={this.state.users[0]} selected disabled hidden>{this.state.users[0]}</option>\r\n                {\r\n                  this.state.users.map((usr)=>{\r\n                    return <option key={usr} value={usr}>{usr}</option>\r\n                  })\r\n                }\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Status</label>\r\n              <select ref=\"userInput2\" className=\"form-control\" required value={this.state.status} onChange={this.onChangeStatus}>\r\n              <option value={this.state.columns[0]} selected disabled hidden>{this.state.columns[0]}</option>\r\n                {\r\n                  this.state.columns.map((col)=>{\r\n                    return <option key={col} value={col}>{col}</option>\r\n                  })\r\n                }\r\n              </select>\r\n            </div >\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\"/>\r\n            <a href=\"/\" className='btn btn-danger'>Close</a>\r\n          </div>\r\n      </form>\r\n    </div>\r\n    </Modal>    \r\n    )\r\n  }\r\n}     ","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ListALL from './components/listall.component';\r\nimport AddTaskModal from \"./components/addtaskmodal.component\";\r\nimport EditTaskModal from \"./components/edittaskmodal.component\";\r\n\r\n\r\n//Main app function\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {/* <AddTaskModal></AddTaskModal> */}\r\n      <AddTaskModal/>\r\n      <Route path=\"/tasks/update/:id\" exact component={EditTaskModal}/> \r\n        <div className=\"columnbox\">\r\n        <Route path=\"/\" exact component={ListALL}/> \r\n      \r\n\r\n   \r\n      </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}