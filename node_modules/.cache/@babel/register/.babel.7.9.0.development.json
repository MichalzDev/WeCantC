{
  "{\"sourceRoot\":\"D:\\\\Dev\\\\Kanbak\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Dev\\\\Kanbak\",\"filename\":\"D:\\\\Dev\\\\Kanbak\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Dev\\\\Kanbak\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Dev\\Kanbak\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Dev\\Kanbak",
      "filename": "D:\\Dev\\Kanbak\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Dev\\Kanbak",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Dev\\Kanbak\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Dev\\Kanbak\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Dev\\Kanbak\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar mongoose = require('mongoose');\n\nvar bodyParser = require(\"body-parser\");\n\nvar path = require(\"path\");\n\nrequire('dotenv').config();\n\nvar port = process.env.HTTP_PORT || 5000;\nvar app = express();\napp.use(cors());\napp.use(express.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\napp.use(express[\"static\"](path.join(__dirname, \"frontend/build\")));\nvar uri = 'mongodb+srv://Kanban-User:ZAQ%212wsx@kanban-arkwo.mongodb.net/kanbak?retryWrites=true&w=majority';\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n});\nvar connection = mongoose.connection;\nconnection.once('open', function () {\n  console.log(\"MongoDB database connection established successfully\");\n});\n\nvar router = require('./routes/routes');\n\napp.use(router);\napp.listen(port, function () {\n  console.log(\"Server is running on port: \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJtb25nb29zZSIsImJvZHlQYXJzZXIiLCJwYXRoIiwiY29uZmlnIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJIVFRQX1BPUlQiLCJhcHAiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiam9pbiIsIl9fZGlybmFtZSIsInVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VDcmVhdGVJbmRleCIsInVzZVVuaWZpZWRUb3BvbG9neSIsImNvbm5lY3Rpb24iLCJvbmNlIiwiY29uc29sZSIsImxvZyIsInJvdXRlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsUUFBUSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0FBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JLLE1BQWxCOztBQUVBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQVosSUFBeUIsSUFBdEM7QUFDQSxJQUFNQyxHQUFHLEdBQUdYLE9BQU8sRUFBbkI7QUFDQVcsR0FBRyxDQUFDQyxHQUFKLENBQVFWLElBQUksRUFBWjtBQUNBUyxHQUFHLENBQUNDLEdBQUosQ0FBUVosT0FBTyxDQUFDYSxJQUFSLEVBQVI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFSLFVBQVUsQ0FBQ1UsVUFBWCxDQUFzQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUU7QUFBWCxDQUF0QixDQUFSO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUixVQUFVLENBQUNTLElBQVgsRUFBUjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUVosT0FBTyxVQUFQLENBQWVLLElBQUksQ0FBQ1csSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGdCQUFyQixDQUFmLENBQVI7QUFFQSxJQUFNQyxHQUFHLEdBQUcsa0dBQVo7QUFDQWYsUUFBUSxDQUFDZ0IsT0FBVCxDQUFpQkQsR0FBakIsRUFBc0I7QUFBRUUsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxjQUFjLEVBQUUsSUFBekM7QUFBK0NDLEVBQUFBLGtCQUFrQixFQUFFO0FBQW5FLENBQXRCO0FBRUEsSUFBTUMsVUFBVSxHQUFHcEIsUUFBUSxDQUFDb0IsVUFBNUI7QUFDQUEsVUFBVSxDQUFDQyxJQUFYLENBQWdCLE1BQWhCLEVBQXdCLFlBQU07QUFDNUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNEQUFaO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxNQUFNLEdBQUcxQixPQUFPLENBQUMsaUJBQUQsQ0FBdEI7O0FBQ0FVLEdBQUcsQ0FBQ0MsR0FBSixDQUFRZSxNQUFSO0FBRUFoQixHQUFHLENBQUNpQixNQUFKLENBQVdyQixJQUFYLEVBQWlCLFlBQU07QUFDbkJrQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsc0NBQTBDbkIsSUFBMUM7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkQ6XFxEZXZcXEthbmJha1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xyXG5cclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LkhUVFBfUE9SVCB8fCA1MDAwO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogZmFsc2V9KSlcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCBcImZyb250ZW5kL2J1aWxkXCIpKSlcclxuXHJcbmNvbnN0IHVyaSA9ICdtb25nb2RiK3NydjovL0thbmJhbi1Vc2VyOlpBUSUyMTJ3c3hAa2FuYmFuLWFya3dvLm1vbmdvZGIubmV0L2thbmJhaz9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknO1xyXG5tb25nb29zZS5jb25uZWN0KHVyaSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZUNyZWF0ZUluZGV4OiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfVxyXG4pO1xyXG5jb25zdCBjb25uZWN0aW9uID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuY29ubmVjdGlvbi5vbmNlKCdvcGVuJywgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKFwiTW9uZ29EQiBkYXRhYmFzZSBjb25uZWN0aW9uIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseVwiKTtcclxufSlcclxuXHJcbmNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL3JvdXRlcycpO1xyXG5hcHAudXNlKHJvdXRlcik7XHJcblxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0OiAke3BvcnR9YCk7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "cors",
        "mongoose",
        "bodyParser",
        "path",
        "config",
        "port",
        "process",
        "env",
        "HTTP_PORT",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "join",
        "__dirname",
        "uri",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "connection",
        "once",
        "console",
        "log",
        "router",
        "listen"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBK,MAAlB;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,IAAtC;AACA,IAAMC,GAAG,GAAGX,OAAO,EAAnB;AACAW,GAAG,CAACC,GAAJ,CAAQV,IAAI,EAAZ;AACAS,GAAG,CAACC,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQR,UAAU,CAACU,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQR,UAAU,CAACS,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQZ,OAAO,UAAP,CAAeK,IAAI,CAACW,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AAEA,IAAMC,GAAG,GAAG,kGAAZ;AACAf,QAAQ,CAACgB,OAAT,CAAiBD,GAAjB,EAAsB;AAAEE,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,cAAc,EAAE,IAAzC;AAA+CC,EAAAA,kBAAkB,EAAE;AAAnE,CAAtB;AAEA,IAAMC,UAAU,GAAGpB,QAAQ,CAACoB,UAA5B;AACAA,UAAU,CAACC,IAAX,CAAgB,MAAhB,EAAwB,YAAM;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACD,CAFD;;AAIA,IAAMC,MAAM,GAAG1B,OAAO,CAAC,iBAAD,CAAtB;;AACAU,GAAG,CAACC,GAAJ,CAAQe,MAAR;AAEAhB,GAAG,CAACiB,MAAJ,CAAWrB,IAAX,EAAiB,YAAM;AACnBkB,EAAAA,OAAO,CAACC,GAAR,sCAA0CnB,IAA1C;AACH,CAFD",
      "sourceRoot": "D:\\Dev\\Kanbak\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst cors = require('cors');\r\nconst mongoose = require('mongoose');\r\nconst bodyParser = require(\"body-parser\");\r\nconst path = require(\"path\");\r\nrequire('dotenv').config();\r\n\r\nconst port = process.env.HTTP_PORT || 5000;\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({extended: false}))\r\napp.use(bodyParser.json())\r\napp.use(express.static(path.join(__dirname, \"frontend/build\")))\r\n\r\nconst uri = 'mongodb+srv://Kanban-User:ZAQ%212wsx@kanban-arkwo.mongodb.net/kanbak?retryWrites=true&w=majority';\r\nmongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true }\r\n);\r\nconst connection = mongoose.connection;\r\nconnection.once('open', () => {\r\n  console.log(\"MongoDB database connection established successfully\");\r\n})\r\n\r\nconst router = require('./routes/routes');\r\napp.use(router);\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server is running on port: ${port}`);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1586259738894
  },
  "{\"sourceRoot\":\"D:\\\\Dev\\\\Kanbak\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Dev\\\\Kanbak\",\"filename\":\"D:\\\\Dev\\\\Kanbak\\\\routes\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Dev\\\\Kanbak\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Dev\\Kanbak\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Dev\\Kanbak",
      "filename": "D:\\Dev\\Kanbak\\routes\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Dev\\Kanbak",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Dev\\Kanbak\\routes\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Dev\\Kanbak\\routes\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Dev\\Kanbak\\routes\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar router = require(\"express\").Router();\n\nvar Column = require(\"../models/models\");\n\nvar mongoose = require(\"mongoose\"); // ------------------------------- / -------------------------------\n// Get columns\n\n\nrouter.route(\"/all\").get(function (req, res) {\n  Column.find().then(function (columns) {\n    return res.json(columns);\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"Error: \" + err);\n  });\n}); // Save columns\n\nrouter.route(\"/all\").post(function (req, res) {\n  Column.deleteMany({}).then(function () {\n    return newState = req.body.map(function (column) {\n      var tasks = column.tasks.map(function (task) {\n        return newTask = {\n          _id: task.id,\n          content: task.content,\n          priority: task.priority,\n          columnId: task.columnID\n        };\n      });\n      newColumn = new Column({\n        _id: column.id,\n        title: column.title,\n        limit: column.limit,\n        tasks: tasks,\n        index: column.index\n      });\n      newColumn.save().then({});\n      return newColumn;\n    });\n  }).then(function () {\n    return res.json(newState);\n  });\n}); // ------------------------------- /COLUMNS -------------------------------\n//Add column\n\nrouter.route(\"/columns/add\").post(function (req, res) {\n  Column.countDocuments({}).then(function (count) {\n    newColumn = new Column({\n      _id: mongoose.Types.ObjectId(),\n      title: req.body.title,\n      limit: req.body.limit,\n      tasks: [],\n      index: count\n    });\n    newColumn.save().then(function (newColumn) {\n      return res.json(newColumn);\n    })[\"catch\"](function (err) {\n      return res.status(400).json(\"Error: \" + err);\n    });\n  });\n}); //Delete column by ID\n\nrouter.route(\"/columns/:id\")[\"delete\"](function (req, res) {\n  Column.findByIdAndDelete(req.params.id).then(function () {\n    return res.json(req.params.id);\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"Error: \" + err);\n  });\n}); // Update column by ID\n\nrouter.route('/columns/:id').put(function (req, res) {\n  Column.findById(req.params.id).then(function (col) {\n    col.title = req.body.title;\n    col.limit = req.body.limit;\n    col.save().then(function (col) {\n      return res.json(col);\n    })[\"catch\"](function (err) {\n      return res.status(400).json('Error: ' + err);\n    });\n  })[\"catch\"](function (err) {\n    return res.status(400).json('Error: ' + err);\n  });\n}); // ------------------------------- /TASKS -------------------------------\n// Add task to column\n\nrouter.route(\"/tasks/add\").post(function (req, res) {\n  task = {\n    content: req.body.content,\n    columnId: req.body.columnID,\n    userId: req.body.userID,\n    priority: req.body.priority\n  };\n  Column.findById(req.body.columnID).then(function (col) {\n    col.tasks.push(task);\n    col.limit--;\n    col.save().then(function (col) {\n      return res.json(col);\n    });\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"Error: \" + err);\n  });\n}); // Delete task\n\nrouter.route(\"/tasks/delete/:id\").post(function (req, res) {\n  deletedTask = {\n    _id: req.params.id,\n    columnID: req.body.columnID\n  };\n  Column.findById(req.body.columnID).then(function (col) {\n    col.tasks.id(req.params.id).remove();\n    col.limit++;\n    col.save().then(function () {\n      return res.json(deletedTask);\n    });\n  })[\"catch\"](function (err) {\n    return res.status(400).json(\"Error: \" + err);\n  });\n}); // Update task by ID\n\nrouter.route('/tasks/:id').put(function (req, res) {\n  changedTask = {\n    _id: req.params.id,\n    content: req.body.content,\n    userId: req.body.userID,\n    priority: req.body.priority,\n    columnId: req.body.columnID\n  };\n  Column.findById(req.body.columnID).then(function (col) {\n    col.tasks.id(req.params.id).set(changedTask);\n    return col.save();\n  }).then(function () {\n    return res.json(changedTask);\n  })[\"catch\"](function (err) {\n    return res.status(400).json('Error: ' + err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "Column",
        "mongoose",
        "route",
        "get",
        "req",
        "res",
        "find",
        "then",
        "columns",
        "json",
        "err",
        "status",
        "post",
        "deleteMany",
        "newState",
        "body",
        "map",
        "column",
        "tasks",
        "task",
        "newTask",
        "_id",
        "id",
        "content",
        "priority",
        "columnId",
        "columnID",
        "newColumn",
        "title",
        "limit",
        "index",
        "save",
        "countDocuments",
        "count",
        "Types",
        "ObjectId",
        "findByIdAndDelete",
        "params",
        "put",
        "findById",
        "col",
        "userId",
        "userID",
        "push",
        "deletedTask",
        "remove",
        "changedTask",
        "set",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB,C,CAEA;AAEA;;;AACAD,MAAM,CAACK,KAAP,CAAa,MAAb,EAAqBC,GAArB,CAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCL,EAAAA,MAAM,CAACM,IAAP,GACGC,IADH,CACQ,UAACC,OAAD;AAAA,WAAaH,GAAG,CAACI,IAAJ,CAASD,OAAT,CAAb;AAAA,GADR,WAES,UAACE,GAAD;AAAA,WAASL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAT;AAAA,GAFT;AAGD,CAJD,E,CAMA;;AACAb,MAAM,CAACK,KAAP,CAAa,MAAb,EAAqBU,IAArB,CAA0B,UAACR,GAAD,EAAMC,GAAN,EAAc;AACtCL,EAAAA,MAAM,CAACa,UAAP,CAAkB,EAAlB,EACGN,IADH,CAEI;AAAA,WACGO,QAAQ,GAAGV,GAAG,CAACW,IAAJ,CAASC,GAAT,CAAa,UAACC,MAAD,EAAY;AACnC,UAAIC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAaF,GAAb,CAAiB,UAACG,IAAD,EAAU;AACrC,eAAQC,OAAO,GAAG;AAChBC,UAAAA,GAAG,EAAEF,IAAI,CAACG,EADM;AAEhBC,UAAAA,OAAO,EAAEJ,IAAI,CAACI,OAFE;AAGhBC,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAHC;AAIhBC,UAAAA,QAAQ,EAAEN,IAAI,CAACO;AAJC,SAAlB;AAMD,OAPW,CAAZ;AAQAC,MAAAA,SAAS,GAAG,IAAI3B,MAAJ,CAAW;AACrBqB,QAAAA,GAAG,EAAEJ,MAAM,CAACK,EADS;AAErBM,QAAAA,KAAK,EAAEX,MAAM,CAACW,KAFO;AAGrBC,QAAAA,KAAK,EAAEZ,MAAM,CAACY,KAHO;AAIrBX,QAAAA,KAAK,EAAEA,KAJc;AAKrBY,QAAAA,KAAK,EAAEb,MAAM,CAACa;AALO,OAAX,CAAZ;AAOAH,MAAAA,SAAS,CAACI,IAAV,GAAiBxB,IAAjB,CAAsB,EAAtB;AACA,aAAOoB,SAAP;AACD,KAlBW,CADd;AAAA,GAFJ,EAuBGpB,IAvBH,CAuBQ;AAAA,WAAMF,GAAG,CAACI,IAAJ,CAASK,QAAT,CAAN;AAAA,GAvBR;AAwBD,CAzBD,E,CA2BA;AAEA;;AACAjB,MAAM,CAACK,KAAP,CAAa,cAAb,EAA6BU,IAA7B,CAAkC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC9CL,EAAAA,MAAM,CAACgC,cAAP,CAAsB,EAAtB,EAA0BzB,IAA1B,CAA+B,UAAC0B,KAAD,EAAW;AACxCN,IAAAA,SAAS,GAAG,IAAI3B,MAAJ,CAAW;AACrBqB,MAAAA,GAAG,EAAEpB,QAAQ,CAACiC,KAAT,CAAeC,QAAf,EADgB;AAErBP,MAAAA,KAAK,EAAExB,GAAG,CAACW,IAAJ,CAASa,KAFK;AAGrBC,MAAAA,KAAK,EAAEzB,GAAG,CAACW,IAAJ,CAASc,KAHK;AAIrBX,MAAAA,KAAK,EAAE,EAJc;AAKrBY,MAAAA,KAAK,EAAEG;AALc,KAAX,CAAZ;AAOAN,IAAAA,SAAS,CACNI,IADH,GAEGxB,IAFH,CAEQ,UAACoB,SAAD;AAAA,aAAetB,GAAG,CAACI,IAAJ,CAASkB,SAAT,CAAf;AAAA,KAFR,WAGS,UAACjB,GAAD;AAAA,aAASL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAT;AAAA,KAHT;AAID,GAZD;AAaD,CAdD,E,CAgBA;;AACAb,MAAM,CAACK,KAAP,CAAa,cAAb,YAAoC,UAACE,GAAD,EAAMC,GAAN,EAAc;AAChDL,EAAAA,MAAM,CAACoC,iBAAP,CAAyBhC,GAAG,CAACiC,MAAJ,CAAWf,EAApC,EACGf,IADH,CACQ;AAAA,WAAMF,GAAG,CAACI,IAAJ,CAASL,GAAG,CAACiC,MAAJ,CAAWf,EAApB,CAAN;AAAA,GADR,WAES,UAACZ,GAAD;AAAA,WAASL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAT;AAAA,GAFT;AAGD,CAJD,E,CAMA;;AACAb,MAAM,CAACK,KAAP,CAAa,cAAb,EAA6BoC,GAA7B,CAAiC,UAAClC,GAAD,EAAMC,GAAN,EAAc;AAC7CL,EAAAA,MAAM,CAACuC,QAAP,CAAgBnC,GAAG,CAACiC,MAAJ,CAAWf,EAA3B,EACGf,IADH,CACQ,UAAAiC,GAAG,EAAI;AACTA,IAAAA,GAAG,CAACZ,KAAJ,GAAYxB,GAAG,CAACW,IAAJ,CAASa,KAArB;AACAY,IAAAA,GAAG,CAACX,KAAJ,GAAYzB,GAAG,CAACW,IAAJ,CAASc,KAArB;AACAW,IAAAA,GAAG,CAACT,IAAJ,GACCxB,IADD,CACM,UAAAiC,GAAG;AAAA,aAAInC,GAAG,CAACI,IAAJ,CAAS+B,GAAT,CAAJ;AAAA,KADT,WAEO,UAAA9B,GAAG;AAAA,aAAIL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAJ;AAAA,KAFV;AAGH,GAPH,WAQS,UAAAA,GAAG;AAAA,WAAIL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAJ;AAAA,GARZ;AASD,CAVD,E,CAYA;AAEA;;AACAb,MAAM,CAACK,KAAP,CAAa,YAAb,EAA2BU,IAA3B,CAAgC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC5Cc,EAAAA,IAAI,GAAG;AACLI,IAAAA,OAAO,EAAEnB,GAAG,CAACW,IAAJ,CAASQ,OADb;AAELE,IAAAA,QAAQ,EAAErB,GAAG,CAACW,IAAJ,CAASW,QAFd;AAGLe,IAAAA,MAAM,EAAErC,GAAG,CAACW,IAAJ,CAAS2B,MAHZ;AAILlB,IAAAA,QAAQ,EAAEpB,GAAG,CAACW,IAAJ,CAASS;AAJd,GAAP;AAOAxB,EAAAA,MAAM,CAACuC,QAAP,CAAgBnC,GAAG,CAACW,IAAJ,CAASW,QAAzB,EACGnB,IADH,CACQ,UAACiC,GAAD,EAAS;AACbA,IAAAA,GAAG,CAACtB,KAAJ,CAAUyB,IAAV,CAAexB,IAAf;AACAqB,IAAAA,GAAG,CAACX,KAAJ;AACAW,IAAAA,GAAG,CAACT,IAAJ,GAAWxB,IAAX,CAAgB,UAACiC,GAAD;AAAA,aAASnC,GAAG,CAACI,IAAJ,CAAS+B,GAAT,CAAT;AAAA,KAAhB;AACD,GALH,WAMS,UAAC9B,GAAD;AAAA,WAASL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAT;AAAA,GANT;AAOD,CAfD,E,CAiBA;;AACAb,MAAM,CAACK,KAAP,CAAa,mBAAb,EAAkCU,IAAlC,CAAuC,UAACR,GAAD,EAAMC,GAAN,EAAc;AACnDuC,EAAAA,WAAW,GAAG;AACZvB,IAAAA,GAAG,EAAEjB,GAAG,CAACiC,MAAJ,CAAWf,EADJ;AAEZI,IAAAA,QAAQ,EAAEtB,GAAG,CAACW,IAAJ,CAASW;AAFP,GAAd;AAKA1B,EAAAA,MAAM,CAACuC,QAAP,CAAgBnC,GAAG,CAACW,IAAJ,CAASW,QAAzB,EACGnB,IADH,CACQ,UAACiC,GAAD,EAAS;AACbA,IAAAA,GAAG,CAACtB,KAAJ,CAAUI,EAAV,CAAalB,GAAG,CAACiC,MAAJ,CAAWf,EAAxB,EAA4BuB,MAA5B;AACAL,IAAAA,GAAG,CAACX,KAAJ;AACAW,IAAAA,GAAG,CAACT,IAAJ,GAAWxB,IAAX,CAAgB;AAAA,aAAMF,GAAG,CAACI,IAAJ,CAASmC,WAAT,CAAN;AAAA,KAAhB;AACD,GALH,WAMS,UAAClC,GAAD;AAAA,WAASL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAT;AAAA,GANT;AAOD,CAbD,E,CAeA;;AACAb,MAAM,CAACK,KAAP,CAAa,YAAb,EAA2BoC,GAA3B,CAA+B,UAAClC,GAAD,EAAMC,GAAN,EAAc;AAC3CyC,EAAAA,WAAW,GAAG;AACZzB,IAAAA,GAAG,EAAEjB,GAAG,CAACiC,MAAJ,CAAWf,EADJ;AAEZC,IAAAA,OAAO,EAAEnB,GAAG,CAACW,IAAJ,CAASQ,OAFN;AAGZkB,IAAAA,MAAM,EAAErC,GAAG,CAACW,IAAJ,CAAS2B,MAHL;AAIZlB,IAAAA,QAAQ,EAAEpB,GAAG,CAACW,IAAJ,CAASS,QAJP;AAKZC,IAAAA,QAAQ,EAAErB,GAAG,CAACW,IAAJ,CAASW;AALP,GAAd;AAQA1B,EAAAA,MAAM,CAACuC,QAAP,CAAgBnC,GAAG,CAACW,IAAJ,CAASW,QAAzB,EACGnB,IADH,CACQ,UAAAiC,GAAG,EAAI;AACXA,IAAAA,GAAG,CAACtB,KAAJ,CAAUI,EAAV,CAAalB,GAAG,CAACiC,MAAJ,CAAWf,EAAxB,EAA4ByB,GAA5B,CAAgCD,WAAhC;AACA,WAAON,GAAG,CAACT,IAAJ,EAAP;AACD,GAJH,EAKGxB,IALH,CAKQ;AAAA,WAAMF,GAAG,CAACI,IAAJ,CAASqC,WAAT,CAAN;AAAA,GALR,WAMS,UAAApC,GAAG;AAAA,WAAIL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,YAAYC,GAAjC,CAAJ;AAAA,GANZ;AAOD,CAhBD;AAkBAsC,MAAM,CAACC,OAAP,GAAiBpD,MAAjB",
      "sourceRoot": "D:\\Dev\\Kanbak\\routes\\",
      "sourcesContent": [
        "const router = require(\"express\").Router();\r\nconst Column = require(\"../models/models\");\r\nconst mongoose = require(\"mongoose\");\r\n\r\n// ------------------------------- / -------------------------------\r\n\r\n// Get columns\r\nrouter.route(\"/all\").get((req, res) => {\r\n  Column.find()\r\n    .then((columns) => res.json(columns))\r\n    .catch((err) => res.status(400).json(\"Error: \" + err));\r\n});\r\n\r\n// Save columns\r\nrouter.route(\"/all\").post((req, res) => {\r\n  Column.deleteMany({})\r\n    .then(\r\n      () =>\r\n        (newState = req.body.map((column) => {\r\n          let tasks = column.tasks.map((task) => {\r\n            return (newTask = {\r\n              _id: task.id,\r\n              content: task.content,\r\n              priority: task.priority,\r\n              columnId: task.columnID,\r\n            });\r\n          });\r\n          newColumn = new Column({\r\n            _id: column.id,\r\n            title: column.title,\r\n            limit: column.limit,\r\n            tasks: tasks,\r\n            index: column.index\r\n          });\r\n          newColumn.save().then({});\r\n          return newColumn;\r\n        }))\r\n    )\r\n    .then(() => res.json(newState));\r\n});\r\n\r\n// ------------------------------- /COLUMNS -------------------------------\r\n\r\n//Add column\r\nrouter.route(\"/columns/add\").post((req, res) => {\r\n  Column.countDocuments({}).then((count) => {\r\n    newColumn = new Column({\r\n      _id: mongoose.Types.ObjectId(),\r\n      title: req.body.title,\r\n      limit: req.body.limit,\r\n      tasks: [],\r\n      index: count,\r\n    });\r\n    newColumn\r\n      .save()\r\n      .then((newColumn) => res.json(newColumn))\r\n      .catch((err) => res.status(400).json(\"Error: \" + err));\r\n  });\r\n});\r\n\r\n//Delete column by ID\r\nrouter.route(\"/columns/:id\").delete((req, res) => {\r\n  Column.findByIdAndDelete(req.params.id)\r\n    .then(() => res.json(req.params.id))\r\n    .catch((err) => res.status(400).json(\"Error: \" + err));\r\n});\r\n\r\n// Update column by ID\r\nrouter.route('/columns/:id').put((req, res) => {\r\n  Column.findById(req.params.id)\r\n    .then(col => {\r\n        col.title = req.body.title;\r\n        col.limit = req.body.limit;\r\n        col.save()\r\n        .then(col => res.json(col))\r\n        .catch(err => res.status(400).json('Error: ' + err));\r\n    })\r\n    .catch(err => res.status(400).json('Error: ' + err));\r\n});\r\n\r\n// ------------------------------- /TASKS -------------------------------\r\n\r\n// Add task to column\r\nrouter.route(\"/tasks/add\").post((req, res) => {\r\n  task = {\r\n    content: req.body.content,\r\n    columnId: req.body.columnID,\r\n    userId: req.body.userID,\r\n    priority: req.body.priority,\r\n  };\r\n\r\n  Column.findById(req.body.columnID)\r\n    .then((col) => {\r\n      col.tasks.push(task);\r\n      col.limit--;\r\n      col.save().then((col) => res.json(col));\r\n    })\r\n    .catch((err) => res.status(400).json(\"Error: \" + err));\r\n});\r\n\r\n// Delete task\r\nrouter.route(\"/tasks/delete/:id\").post((req, res) => {\r\n  deletedTask = {\r\n    _id: req.params.id,\r\n    columnID: req.body.columnID,\r\n  };\r\n\r\n  Column.findById(req.body.columnID)\r\n    .then((col) => {\r\n      col.tasks.id(req.params.id).remove();\r\n      col.limit++;\r\n      col.save().then(() => res.json(deletedTask));\r\n    })\r\n    .catch((err) => res.status(400).json(\"Error: \" + err));\r\n});\r\n\r\n// Update task by ID\r\nrouter.route('/tasks/:id').put((req, res) => {\r\n  changedTask = {\r\n    _id: req.params.id,\r\n    content: req.body.content,\r\n    userId: req.body.userID,\r\n    priority: req.body.priority,\r\n    columnId: req.body.columnID\r\n  }\r\n\r\n  Column.findById(req.body.columnID)\r\n    .then(col => {\r\n      col.tasks.id(req.params.id).set(changedTask)\r\n      return col.save()\r\n    })\r\n    .then(() => res.json(changedTask))\r\n    .catch(err => res.status(400).json('Error: ' + err));\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586261317365
  },
  "{\"sourceRoot\":\"D:\\\\Dev\\\\Kanbak\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Dev\\\\Kanbak\",\"filename\":\"D:\\\\Dev\\\\Kanbak\\\\models\\\\models.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Dev\\\\Kanbak\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Dev\\Kanbak\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Dev\\Kanbak",
      "filename": "D:\\Dev\\Kanbak\\models\\models.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Dev\\Kanbak",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Dev\\Kanbak\\models\\models.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Dev\\Kanbak\\models\\models.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Dev\\Kanbak\\models\\",
        "sourceFileName": "models.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar userSchema = {\n  _id: Schema.Types.ObjectId,\n  name: String\n};\nvar taskSchema = Schema({\n  content: String,\n  columnId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Column'\n  },\n  userId: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  priority: {\n    type: String,\n    \"enum\": ['low', 'medium', 'high'],\n    \"default\": 'medium'\n  }\n});\nvar columnSchema = Schema({\n  _id: Schema.Types.ObjectId,\n  index: {\n    type: Number,\n    \"default\": 1\n  },\n  title: String,\n  limit: {\n    type: Number,\n    \"default\": -99999\n  },\n  tasks: [taskSchema]\n});\nvar Column = mongoose.model('Column', columnSchema);\nvar Task = mongoose.model('Task', taskSchema);\nvar User = mongoose.model('User', userSchema);\nmodule.exports = User;\nmodule.exports = Task;\nmodule.exports = Column;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJ1c2VyU2NoZW1hIiwiX2lkIiwiVHlwZXMiLCJPYmplY3RJZCIsIm5hbWUiLCJTdHJpbmciLCJ0YXNrU2NoZW1hIiwiY29udGVudCIsImNvbHVtbklkIiwidHlwZSIsInJlZiIsInVzZXJJZCIsInByaW9yaXR5IiwiY29sdW1uU2NoZW1hIiwiaW5kZXgiLCJOdW1iZXIiLCJ0aXRsZSIsImxpbWl0IiwidGFza3MiLCJDb2x1bW4iLCJtb2RlbCIsIlRhc2siLCJVc2VyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF0QjtBQUVBLElBQU1DLFVBQVUsR0FBSTtBQUNsQkMsRUFBQUEsR0FBRyxFQUFFRixNQUFNLENBQUNHLEtBQVAsQ0FBYUMsUUFEQTtBQUVsQkMsRUFBQUEsSUFBSSxFQUFFQztBQUZZLENBQXBCO0FBS0EsSUFBTUMsVUFBVSxHQUFHUCxNQUFNLENBQUM7QUFDeEJRLEVBQUFBLE9BQU8sRUFBRUYsTUFEZTtBQUV4QkcsRUFBQUEsUUFBUSxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRVYsTUFBTSxDQUFDRyxLQUFQLENBQWFDLFFBQXJCO0FBQStCTyxJQUFBQSxHQUFHLEVBQUU7QUFBcEMsR0FGYztBQUd4QkMsRUFBQUEsTUFBTSxFQUFFO0FBQUVGLElBQUFBLElBQUksRUFBRVYsTUFBTSxDQUFDRyxLQUFQLENBQWFDLFFBQXJCO0FBQStCTyxJQUFBQSxHQUFHLEVBQUU7QUFBcEMsR0FIZ0I7QUFJeEJFLEVBQUFBLFFBQVEsRUFBRTtBQUFFSCxJQUFBQSxJQUFJLEVBQUVKLE1BQVI7QUFBZ0IsWUFBTSxDQUFDLEtBQUQsRUFBUSxRQUFSLEVBQWtCLE1BQWxCLENBQXRCO0FBQWlELGVBQVM7QUFBMUQ7QUFKYyxDQUFELENBQXpCO0FBT0EsSUFBTVEsWUFBWSxHQUFHZCxNQUFNLENBQUM7QUFDMUJFLEVBQUFBLEdBQUcsRUFBRUYsTUFBTSxDQUFDRyxLQUFQLENBQWFDLFFBRFE7QUFFMUJXLEVBQUFBLEtBQUssRUFBRTtBQUFFTCxJQUFBQSxJQUFJLEVBQUVNLE1BQVI7QUFBZ0IsZUFBUztBQUF6QixHQUZtQjtBQUcxQkMsRUFBQUEsS0FBSyxFQUFFWCxNQUhtQjtBQUkxQlksRUFBQUEsS0FBSyxFQUFFO0FBQUVSLElBQUFBLElBQUksRUFBRU0sTUFBUjtBQUFnQixlQUFTLENBQUM7QUFBMUIsR0FKbUI7QUFLMUJHLEVBQUFBLEtBQUssRUFBRSxDQUFDWixVQUFEO0FBTG1CLENBQUQsQ0FBM0I7QUFVQSxJQUFNYSxNQUFNLEdBQUd0QixRQUFRLENBQUN1QixLQUFULENBQWUsUUFBZixFQUF5QlAsWUFBekIsQ0FBZjtBQUNBLElBQU1RLElBQUksR0FBR3hCLFFBQVEsQ0FBQ3VCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCZCxVQUF2QixDQUFiO0FBQ0EsSUFBTWdCLElBQUksR0FBR3pCLFFBQVEsQ0FBQ3VCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCcEIsVUFBdkIsQ0FBYjtBQUVBdUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixJQUFqQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILElBQWpCO0FBQ0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXERldlxcS2FuYmFrXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxudmFyIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbmNvbnN0IHVzZXJTY2hlbWEgPSAoe1xyXG4gIF9pZDogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gIG5hbWU6IFN0cmluZ1xyXG59KTtcclxuXHJcbmNvbnN0IHRhc2tTY2hlbWEgPSBTY2hlbWEoe1xyXG4gIGNvbnRlbnQ6IFN0cmluZyxcclxuICBjb2x1bW5JZDogeyB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ0NvbHVtbicgfSxcclxuICB1c2VySWQ6IHsgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdVc2VyJyB9LFxyXG4gIHByaW9yaXR5OiB7IHR5cGU6IFN0cmluZywgZW51bTogWydsb3cnLCAnbWVkaXVtJywgJ2hpZ2gnXSwgZGVmYXVsdDogJ21lZGl1bSd9XHJcbn0pO1xyXG5cclxuY29uc3QgY29sdW1uU2NoZW1hID0gU2NoZW1hKHtcclxuICBfaWQ6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICBpbmRleDogeyB0eXBlOiBOdW1iZXIsIGRlZmF1bHQ6IDEgfSxcclxuICB0aXRsZTogU3RyaW5nLFxyXG4gIGxpbWl0OiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogLTk5OTk5IH0sXHJcbiAgdGFza3M6IFt0YXNrU2NoZW1hXVxyXG59KTtcclxuXHJcblxyXG5cclxuY29uc3QgQ29sdW1uID0gbW9uZ29vc2UubW9kZWwoJ0NvbHVtbicsIGNvbHVtblNjaGVtYSk7XHJcbmNvbnN0IFRhc2sgPSBtb25nb29zZS5tb2RlbCgnVGFzaycsIHRhc2tTY2hlbWEpO1xyXG5jb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCB1c2VyU2NoZW1hKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVXNlcjtcclxubW9kdWxlLmV4cG9ydHMgPSBUYXNrO1xyXG5tb2R1bGUuZXhwb3J0cyA9IENvbHVtbjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "models.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "userSchema",
        "_id",
        "Types",
        "ObjectId",
        "name",
        "String",
        "taskSchema",
        "content",
        "columnId",
        "type",
        "ref",
        "userId",
        "priority",
        "columnSchema",
        "index",
        "Number",
        "title",
        "limit",
        "tasks",
        "Column",
        "model",
        "Task",
        "User",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAMC,UAAU,GAAI;AAClBC,EAAAA,GAAG,EAAEF,MAAM,CAACG,KAAP,CAAaC,QADA;AAElBC,EAAAA,IAAI,EAAEC;AAFY,CAApB;AAKA,IAAMC,UAAU,GAAGP,MAAM,CAAC;AACxBQ,EAAAA,OAAO,EAAEF,MADe;AAExBG,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEV,MAAM,CAACG,KAAP,CAAaC,QAArB;AAA+BO,IAAAA,GAAG,EAAE;AAApC,GAFc;AAGxBC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,IAAI,EAAEV,MAAM,CAACG,KAAP,CAAaC,QAArB;AAA+BO,IAAAA,GAAG,EAAE;AAApC,GAHgB;AAIxBE,EAAAA,QAAQ,EAAE;AAAEH,IAAAA,IAAI,EAAEJ,MAAR;AAAgB,YAAM,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,CAAtB;AAAiD,eAAS;AAA1D;AAJc,CAAD,CAAzB;AAOA,IAAMQ,YAAY,GAAGd,MAAM,CAAC;AAC1BE,EAAAA,GAAG,EAAEF,MAAM,CAACG,KAAP,CAAaC,QADQ;AAE1BW,EAAAA,KAAK,EAAE;AAAEL,IAAAA,IAAI,EAAEM,MAAR;AAAgB,eAAS;AAAzB,GAFmB;AAG1BC,EAAAA,KAAK,EAAEX,MAHmB;AAI1BY,EAAAA,KAAK,EAAE;AAAER,IAAAA,IAAI,EAAEM,MAAR;AAAgB,eAAS,CAAC;AAA1B,GAJmB;AAK1BG,EAAAA,KAAK,EAAE,CAACZ,UAAD;AALmB,CAAD,CAA3B;AAUA,IAAMa,MAAM,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,QAAf,EAAyBP,YAAzB,CAAf;AACA,IAAMQ,IAAI,GAAGxB,QAAQ,CAACuB,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAb;AACA,IAAMgB,IAAI,GAAGzB,QAAQ,CAACuB,KAAT,CAAe,MAAf,EAAuBpB,UAAvB,CAAb;AAEAuB,MAAM,CAACC,OAAP,GAAiBF,IAAjB;AACAC,MAAM,CAACC,OAAP,GAAiBH,IAAjB;AACAE,MAAM,CAACC,OAAP,GAAiBL,MAAjB",
      "sourceRoot": "D:\\Dev\\Kanbak\\models\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nvar Schema = mongoose.Schema;\r\n\r\nconst userSchema = ({\r\n  _id: Schema.Types.ObjectId,\r\n  name: String\r\n});\r\n\r\nconst taskSchema = Schema({\r\n  content: String,\r\n  columnId: { type: Schema.Types.ObjectId, ref: 'Column' },\r\n  userId: { type: Schema.Types.ObjectId, ref: 'User' },\r\n  priority: { type: String, enum: ['low', 'medium', 'high'], default: 'medium'}\r\n});\r\n\r\nconst columnSchema = Schema({\r\n  _id: Schema.Types.ObjectId,\r\n  index: { type: Number, default: 1 },\r\n  title: String,\r\n  limit: { type: Number, default: -99999 },\r\n  tasks: [taskSchema]\r\n});\r\n\r\n\r\n\r\nconst Column = mongoose.model('Column', columnSchema);\r\nconst Task = mongoose.model('Task', taskSchema);\r\nconst User = mongoose.model('User', userSchema);\r\n\r\nmodule.exports = User;\r\nmodule.exports = Task;\r\nmodule.exports = Column;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586258424350
  }
}